<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.whut.gumorming.mapper.UserMapper">
    <resultMap id="UserBackMap" type="cn.edu.whut.gumorming.model.user.UserBackResponse">
        <id column="id" property="id"/>
        <result column="nickname" property="nickname"/>
        <result column="avatar" property="avatar"/>
        <result column="ip_address" property="ipAddress"/>
        <result column="ip_source" property="ipSource"/>
        <result column="login_type" property="loginType"/>
        <result column="is_disable" property="isDisable"/>
        <result column="login_time" property="loginTime"/>
        <result column="create_time" property="createTime"/>
        <collection property="roleList" ofType="cn.edu.whut.gumorming.model.response.UserRoleResponse">
            <id column="role_id" property="id"/>
            <id column="role_name" property="roleName"/>
        </collection>
    </resultMap>

    <select id="selectUserList" resultMap="UserBackMap">
        SELECT
        u.id,
        nickname,
        avatar,
        ip_address,
        ip_source,
        login_type,
        r.id AS role_id,
        r.role_name,
        u.is_disable,
        login_time,
        u.create_time
        FROM
        ( SELECT id FROM user
        <where>
            <if test="userQuery.keyword != null and userQuery.keyword != ''">
                nickname like concat('%',#{userQuery.keyword},'%')
            </if>
            <if test="userQuery.loginType != null">
                and login_type = #{userQuery.loginType}
            </if>
        </where>
        LIMIT #{userQuery.current},#{userQuery.size}
        ) temp
        LEFT JOIN user u ON temp.id = u.id
        LEFT JOIN user_role ur ON temp.id = ur.user_id
        LEFT JOIN role r ON ur.role_id = r.id
    </select>
</mapper>